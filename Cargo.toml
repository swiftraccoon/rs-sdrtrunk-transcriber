[workspace]
members = [
    "crates/sdrtrunk-core",
    "crates/sdrtrunk-database",
    "crates/sdrtrunk-api",
    "crates/sdrtrunk-monitor",
    "crates/sdrtrunk-transcriber",
    "crates/sdrtrunk-web",
]
resolver = "2"
default-members = ["crates/sdrtrunk-api"]

[workspace.package]
version = "0.1.0"
authors = ["swiftraccoon"]
license = "GPL-3.0"
edition = "2024"
rust-version = "1.89.0"
homepage = "https://github.com/swiftraccoon/rs-sdrtrunk-transcriber"
repository = "https://github.com/swiftraccoon/rs-sdrtrunk-transcriber"
documentation = "https://docs.rs/rs-sdrtrunk-transcriber"
keywords = ["sdr", "radio", "transcription", "audio", "signal-processing"]
categories = ["multimedia", "parsing", "command-line-utilities"]
readme = "README.md"
description = "SDRTrunk transcription and analysis toolkit"

[workspace.dependencies]
# Async runtime and utilities
tokio = { version = "1.40", features = ["full"] }
async-trait = "0.1"

# Serialization and data formats
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"

# Error handling and logging
thiserror = "2.0"
tracing = { version = "0.1", features = ["max_level_trace", "release_max_level_info"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "registry", "fmt"] }

# CLI and configuration
clap = { version = "4.5", features = ["derive", "env", "wrap_help", "string"] }
config = "0.14"

# Performance and data structures
dashmap = "6.1"
parking_lot = "0.12"

# Networking and HTTP
reqwest = { version = "0.12", features = ["json", "rustls-tls", "stream"] }
hyper = { version = "1.4", features = ["full"] }
tower = { version = "0.5", features = ["full"] }
tower-http = { version = "0.6", features = ["full"] }
axum = { version = "0.7", features = ["macros", "multipart", "ws"] }
http = "1.1"

# Database and storage
sqlx = { version = "0.8", default-features = false, features = ["runtime-tokio-rustls", "postgres", "chrono", "uuid", "migrate", "json", "ipnetwork", "rust_decimal", "macros"] }
rust_decimal = { version = "1.36", features = ["serde", "db-postgres"] }

# Date and time
chrono = { version = "0.4", features = ["serde", "clock"] }


# Development and testing dependencies
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
proptest = "1.5"
tempfile = "3.13"

# Validation and rate limiting
validator = { version = "0.19", features = ["derive"] }
governor = "0.7"

# Async utilities (used by transcriber worker)
async-channel = "2.3"

# File system monitoring
notify = { version = "6.1", features = ["macos_fsevent", "macos_kqueue"] }
notify-debouncer-full = "0.3"

# UUID generation
uuid = { version = "1.10", features = ["v4", "serde"] }

# Web framework (for sdrtrunk-web)
leptos = { version = "0.7", features = ["csr", "ssr"] }
leptos_axum = { version = "0.7" }
leptos_router = { version = "0.7" }

# WebSocket support (minimal addition for real-time features)
tokio-tungstenite = "0.24"
futures-util = "0.3"

# URL encoding for query parameters
urlencoding = "2.1"

# Testing utilities
testcontainers = "0.23"
testcontainers-modules = { version = "0.11", features = ["postgres"] }
mockall = "0.13"
tarpaulin = "0.31"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

# Workspace-wide lints configuration
[workspace.lints.rust]
# Deny unsafe code by default (allow in specific modules with #[allow(unsafe_code)])
unsafe_code = "forbid"
# Deny common mistake patterns
rust_2018_idioms = { level = "deny", priority = -1 }
rust_2021_compatibility = { level = "deny", priority = -1 }
missing_debug_implementations = "warn"
missing_docs = "warn"
unreachable_pub = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

[workspace.lints.clippy]
# Deny all clippy categories for maximum safety
all = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
nursery = { level = "deny", priority = -1 }
cargo = { level = "deny", priority = -1 }

# Allow some overly restrictive lints
multiple_crate_versions = "allow"
missing_docs_in_private_items = "allow"
implicit_return = "allow"
question_mark_used = "allow"
single_call_fn = "allow"
std_instead_of_alloc = "allow"
std_instead_of_core = "allow"
shadow_reuse = "allow"
shadow_same = "allow"
shadow_unrelated = "allow"
separated_literal_suffix = "allow"
mod_module_files = "allow"
blanket_clippy_restriction_lints = "allow"
literal-string-with-formatting-args = "allow"

# Performance lints
unnecessary_wraps = "deny"
large_types_passed_by_value = "deny"
trivially_copy_pass_by_ref = "deny"

# Security and correctness lints
lossy_float_literal = "deny"
mem_forget = "deny"
panic = "deny"
unreachable = "deny"
unwrap_used = "deny"
expect_used = "deny"
indexing_slicing = "deny"
integer_arithmetic = "allow"  # Too restrictive for most code
float_arithmetic = "allow"    # Too restrictive for DSP code

[workspace.lints.rustdoc]
broken_intra_doc_links = "deny"
private_intra_doc_links = "deny"
missing_crate_level_docs = "warn"
invalid_codeblock_attributes = "deny"
invalid_rust_codeblocks = "deny"
bare_urls = "deny"

# Profile configurations inherited by all workspace members
[profile.dev]
debug = 2
debug-assertions = true
overflow-checks = true
lto = false
panic = 'unwind'
incremental = true
codegen-units = 256
opt-level = 0

[profile.release]
debug = false
debug-assertions = false
overflow-checks = false
lto = "fat"
panic = 'abort'
incremental = false
codegen-units = 1
opt-level = 3
strip = true

[profile.test]
debug = 2
debug-assertions = true
overflow-checks = true
opt-level = 1

[profile.bench]
debug = false
debug-assertions = false
overflow-checks = false
lto = "thin"
incremental = false
codegen-units = 1
opt-level = 3

# Custom profiles
[profile.dev-opt]
inherits = "dev"
opt-level = 1
debug-assertions = true
overflow-checks = true

[profile.release-debug]
inherits = "release"
debug = 1
strip = false