[package]
name = "sdrtrunk-transcriber"
version = "0.1.0"
edition = "2024"
rust-version = "1.89.0"
authors = ["SDRTrunk Transcriber Contributors"]
description = "Transcription service for SDRTrunk audio files with speaker diarization"
license = "GPL-3.0"
repository = "https://github.com/swiftraccoon/rs-sdrtrunk-transcriber"
keywords = ["transcription", "whisper", "diarization", "sdr", "audio"]
categories = ["multimedia::audio", "api-bindings"]

[dependencies]
# Workspace dependencies
sdrtrunk-core = { path = "../sdrtrunk-core" }

# Async runtime
tokio = { workspace = true, features = ["full"] }
tokio-util = { workspace = true, features = ["rt"] }
async-trait = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# HTTP client for Python service communication
reqwest = { workspace = true, features = ["json", "multipart"] }

# Process management for Python subprocess
subprocess = "0.2"

# Logging
tracing = { workspace = true }

# UUID for request tracking
uuid = { workspace = true, features = ["v4", "serde"] }

# Time handling
chrono = { workspace = true }

# Async channels for worker communication
async-channel = "2.1"

# Path handling
tempfile = { workspace = true }

# Metrics
metrics = { workspace = true }

[dev-dependencies]
# Testing
tokio-test = "0.4"
pretty_assertions = { workspace = true }
proptest = { workspace = true }
tempfile = { workspace = true }
wiremock = "0.6"  # For mocking HTTP responses

[features]
default = []
mock = []  # Enable mock transcription service