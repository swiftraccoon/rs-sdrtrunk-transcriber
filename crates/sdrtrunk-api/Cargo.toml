[package]
name = "sdrtrunk-api"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
rust-version.workspace = true
description = "REST API server for SDRTrunk transcriber"
repository = "https://github.com/swiftraccoon/rs-sdrtrunk-transcriber"
readme = "../../README.md"
keywords = ["sdr", "api", "rest", "axum", "transcription"]
categories = ["web-programming", "multimedia"]

[[bin]]
name = "sdrtrunk-api-server"
path = "src/main.rs"

[dependencies]
# Internal dependencies
sdrtrunk-core = { path = "../sdrtrunk-core" }
sdrtrunk-database = { path = "../sdrtrunk-database" }
sdrtrunk-transcriber = { path = "../sdrtrunk-transcriber" }

# Web framework
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }

# Async runtime
tokio = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Validation
validator = { workspace = true }

# OpenAPI documentation (commented out to reduce dependencies)
# utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"] }
# utoipa-swagger-ui = { version = "7.1", features = ["axum"] }

# Metrics (simplified - could use a lighter solution)
# prometheus = "0.13"

# Date/time
chrono = { workspace = true }

# Utilities
uuid = { workspace = true }

# Logging
tracing = { workspace = true }

# Error handling (uses sdrtrunk-core custom implementations)

# Rate limiting
governor = { workspace = true }

# URL encoding removed - using manual parsing

# HTTP status codes and utilities
http = { workspace = true }

# Dashboard/map for in-memory storage
dashmap = { workspace = true }

# Direct access to sqlx types
sqlx = { workspace = true }
rust_decimal = { workspace = true }

[dev-dependencies]
# HTTP client for testing
reqwest = { workspace = true }
tower = { workspace = true }
hyper = { workspace = true }

# Test utilities
pretty_assertions = { workspace = true }
tempfile = { workspace = true }
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true }
futures = { workspace = true }
validator = { workspace = true }
tokio-test = "0.4"